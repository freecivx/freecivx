
; Modifying this file:
; You should not modify this file except to make bugfixes or
; for other "maintenance".  If you want to make custom changes,
; you should create a new datadir subdirectory and copy this file
; into that directory, and then modify that copy.  Then use the
; command "rulesetdir <mysubdir>" in the server to have freeciv
; use your new customized file.

; Note that the freeciv AI may not cope well with anything more
; than minor changes.

[datafile]
description = "Granularity buildings data for Freeciv"
options = "+Freeciv-ruleset-3.3-Devel-2023.Feb.24"
format_version = 40

[control]

; Names for custom building flags. There can be up to 8 of these.
; name          = rule name; In some circumstances user may see this
;                 as part of some sentences, so try to make it descriptive
;                 and sensible.
; helptxt       = displayed in the help for building types with this flag
;                 (optional)
;building_flags =
;  { "name", "helptxt"
;  }

; /* <-- avoid gettext warnings
;
; Below: The individual buildings, one per section.
; (Buildings = City Improvements and Wonders)
;
; The actual tag used (the * in [building_*]) does not matter, except
; it must be unique within this file, and it may be used in debug
; output when reading this file.
;
; Notes:
;
; name          = translatable name as seen by user
; rule_name     = (optional) internal name for savegames, rulesets etc; if
;                 not present, "name" is used for this purpose too. Since
;                 the name used in savegames must not change, if you want
;                 to rename an item after a ruleset has been released, you
;                 should set "rule_name" to the original value of "name".
; genus	        = genus; one of:
;                 "GreatWonder", "SmallWonder", "Improvement", "Special",
;                 or "Convert".
; reqs		= requirements to build the building (see effects.ruleset
;		  and README.effects for help on requirements)
; graphic	= icon of improvement (used in city dialog)
; graphic_alt	= alternate icon of improvement
; obsolete_by	= requirements for the building to become obsolete
; build_cost	= production shields required to build
; upkeep	= monetary upkeep value
; sabotage	= percent chance of diplomat sabotage being successful
; flags         = special flag strings
;
; ** Building flags **
; "VisibleByOthers"  = Anyone who can see your city knows whether it has
;                      this improvement. (Great and small wonders are
;                      always visible.)
; "SaveSmallWonder"  = If you lose the city with this building in, and the
;                      "savepalace" server setting is enabled, another will
;                      be built for free in a random city.
;                      Should only be used with genus "SmallWonder".
; "Gold"             = Not a real building; production turned into gold
;                      indefinitely (capitalization/coinage).
;                      Genus should be "Convert".
; "DisasterProof"    = Disasters never destroy this building. Is meaningful
;                      only for genus "Improvement" buildings as others are
;                      automatically disaster proof.
;
; */ <-- avoid gettext warnings

[building_city_walls]
name		= _("City Walls")
genus		= "Improvement"
flags		= "VisibleByOthers"
reqs	=
    { "type", "name", "range"
      "Tech", "Masonry", "Player"
    }
graphic	= "b.city_walls"
graphic_alt	= "-"
obsolete_by	=
    { "type", "name", "range"
    }
build_cost	= 1200
upkeep		= 0
sabotage	= 50
sound		= "b_city_walls"
sound_alt	= "b_generic"
helptext	= _("\
City Walls make it easier to defend a city. They triple the defense\
 strength of units within the city against land units.\
")

[building_sacred_grove]
name		= _("Sacred Grove")
genus		= "Improvement"
reqs	=
    { "type", "name", "range"
      "Tech", "Spirits", "Player"
    }
graphic	= "b.sacred_grove"
graphic_alt	= "b.temple"
obsolete_by	=
    { "type", "name", "range"
    }
build_cost	= 1100
upkeep		= 80
sabotage	= 100
sound		= "b_sacred_grove"
sound_alt	= "b_generic"
helptext	= _("\
Makes one unhappy citizen content.\
 Does not affect citizens made unhappy by military activity.\
")

[building_throne]
name		= _("Throne")
genus		= "SmallWonder"
reqs	=
    { "type", "name", "range"
; No requirements
    }
graphic         = "b.throne"
graphic_alt	= "b.palace"
obsolete_by     =
    { "type", "name", "range"
    }
build_cost	= 1000
upkeep		= 0
sabotage	= 100
sound		= "b_palace"
sound_alt	= "b_generic"
helptext	= _("\
City with your throne is your capital city.\
")
